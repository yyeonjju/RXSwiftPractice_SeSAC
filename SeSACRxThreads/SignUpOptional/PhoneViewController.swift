//
//  PhoneViewController.swift
//  SeSACRxThreads
//
//  Created by jack on 2023/10/30.
//
 
import UIKit
import SnapKit
import RxSwift
import RxCocoa

class PhoneViewController: UIViewController {
   
    let phoneTextField = SignTextField(placeholderText: "Ïó∞ÎùΩÏ≤òÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî")
    let nextButton = PointButton(title: "Îã§Ïùå")
    let descriptionLabel = UILabel()
    
    let validationNoticeText = BehaviorSubject(value: "")
    let defaultPrefixText = Observable.just("010")
    let disposeBag = DisposeBag()
    
    override func viewDidLoad() {
        super.viewDidLoad()

        view.backgroundColor = Color.white
        
        configureLayout()
        
        nextButton.addTarget(self, action: #selector(nextButtonClicked), for: .touchUpInside)
        
        bind()
    }
    
    private func bind() {
        //010 Í∏∞Î≥∏Ï†ÅÏúºÎ°ú Ïì∞Ïó¨ÏûàÏùå
        defaultPrefixText
            .bind(to: phoneTextField.rx.text)
            .disposed(by: disposeBag)
        
        validationNoticeText
            .bind(to: descriptionLabel.rx.text)
            .disposed(by: disposeBag)
        
        
        phoneTextField.rx.text.orEmpty
            .map(digitsOnly) //ÏûëÏÑ±Îêú textÏóêÏÑú Ïà´ÏûêÍ∞íÎßå ÎÇòÏò¨ Ïàò ÏûàÎèÑÎ°ù
            .bind(with: self) { owner, text in
                print("text --> ", text)
                owner.phoneTextField.text = text
                //Ïù¥Î†áÍ≤å ÌïòÎ©¥ Ïù¥Î≤§Ìä∏ Îòê Î∂àÎ†§ÏÑú Î¨¥Ìïú Î£®ÌîÑÏóê Í∞áÌûê Ï§Ñ ÏïåÏïòÎäîÎç∞
                //üìçhttps://stackoverflow.com/questions/50558613/rxswift-replacement-shouldchangecharactersinrange#comment95908346_51814368 : `textField.text = newText` will not cause an event of rx.text controlProperty. If you want to force a text event you need to manually send valueChanged eventtextField.sendActions(for: .valueChanged)
                //Ï¶â, owner.phoneTextField.sendActions(for: .valueChanged) Ìï¥Ï£ºÏßÄ ÏïäÎäî Ïù¥ÏÉÅ Î¨¥Ìïú Î£®ÌîÑÍ∞Ä Îê† ÏùºÏù¥ ÏóÜÎã§!
                
                
                let isValid = text.count >= 10
                owner.nextButton.backgroundColor = isValid ? .systemPink : .lightGray
                owner.nextButton.isEnabled = isValid
                
                //‚ùìÏà´ÏûêÏóê ÎåÄÌïú ÌåêÎ≥ÑÏù¥ Ïö∞ÏÑ† -> Ïà´ÏûêÏóê ÎåÄÌïú Ïú†Ìö®ÏÑ±ÏùÑ ÌÜµÍ≥ºÌñàÎã§Î©¥ Í∑∏ Îã§ÏùåÏóê Í∏ÄÏûê Í∏∏Ïù¥ ÌåêÎ≥ÑÌï¥Ï£ºÍ≥† Ïã∂Îã§Î©¥?
                //‚ùì Ïù¥ ÏΩîÎìúÏóêÏÑúÎäî digitsOnly Î©îÏÑúÎìúÏóêÏÑú Ïú†Ìö®ÏÑ±Ïóê ÎåÄÌï¥ validationNoticeTextÎ•º ÏóÖÎç∞Ïù¥Ìä∏Ìï¥Ï£ºÏóàÏñ¥ÎèÑ Ïù¥ Í≥ºÏ†ïÏóêÏÑú ÎçÆÏñ¥Ïì∞Ïó¨ÏßÑÎã§.
                //ex. textFielsDelegateÏóêÏÑúÏùò replacement Î©îÏÑúÎìúÎ•º Ïù¥Ïö©Ìï¥ÏÑú ÏûëÏÑ±Ìïú Î¨∏ÏûêÏóê ÎåÄÌï¥ ÌåêÎ≥ÑÌïòÍ≥† -> addTargetÏùò editingChanged Ïù¥Î≤§Ìä∏Î°ú Î¨∏Ïûê Í∏∏Ïù¥Ïóê ÎåÄÌïú Ïú†Ìö®ÏÑ±ÏùÑ ÌåêÎ≥ÑÌï¥Ï£ºÎäî Í≤É Ï≤òÎüº
            }
            .disposed(by: disposeBag)
        
    }
    
    
    //Ïà´ÏûêÍ∞Ä ÏïÑÎãå Îã§Î•∏ Î¨∏ÏûêÍ∞Ä ÏûàÎã§Î©¥ Ïà´ÏûêÎßå ÏûàÎèÑÎ°ù Î¨∏ÏûêÏó¥ Íµ¨ÏÑ±Ìï¥ÏÑú Î¶¨ÌÑ¥
    private func digitsOnly(_ text: String) -> String {
        if Int(text) == nil {
            validationNoticeText.onNext("Ïà´ÏûêÎßå ÏûÖÎ†•Ïù¥ Í∞ÄÎä•Ìï©ÎãàÎã§.")
        }else {
            validationNoticeText.onNext("")
        }
        
        return text.components(separatedBy: CharacterSet.decimalDigits.inverted).joined(separator: "")
    }
    
    @objc func nextButtonClicked() {
        navigationController?.pushViewController(NicknameViewController(), animated: true)
    }

    
    func configureLayout() {
        view.addSubview(phoneTextField)
        view.addSubview(nextButton)
        view.addSubview(descriptionLabel)
         
        phoneTextField.snp.makeConstraints { make in
            make.height.equalTo(50)
            make.top.equalTo(view.safeAreaLayoutGuide).offset(200)
            make.horizontalEdges.equalTo(view.safeAreaLayoutGuide).inset(20)
        }
        
        descriptionLabel.snp.makeConstraints { make in
            make.height.equalTo(20)
            make.top.equalTo(phoneTextField.snp.bottom)
            make.horizontalEdges.equalTo(view.safeAreaLayoutGuide).inset(20)
        }
        
        nextButton.snp.makeConstraints { make in
            make.height.equalTo(50)
            make.top.equalTo(phoneTextField.snp.bottom).offset(30)
            make.horizontalEdges.equalTo(view.safeAreaLayoutGuide).inset(20)
        }
        
        descriptionLabel.textColor = .red
    }

}
